name: 4. Build Loop
run-name: Build Loop (${{ github.ref_name }})
on:
  workflow_dispatch:
  workflow_call:
  
  ## Remove the "#" sign from the beginning of the line below to get automated builds on push (code changes in your repository)
  #push:

  schedule:
    - cron: '30 04 1 * *' # Runs at 04:30 UTC on the 1st every month

env:
  BUILD_BRANCH: ${{ github.ref_name }} # branch on fork to build from (relpace with specific branch name if needed)

jobs:
  secrets:
    name: Secrets
    uses: ./.github/workflows/validate_secrets.yml
    secrets: inherit

  build:
    name: Build
    needs: secrets
    runs-on: macos-13
    steps:
      # Uncomment to manually select latest Xcode if needed
      - name: Select Latest Xcode
        run: "sudo xcode-select --switch /Applications/Xcode_14.3.1.app/Contents/Developer"

      # Checks-out the repo
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ env.BUILD_BRANCH }} 
              
      # Customize Loop: Download and apply patches
      - name: Customize Loop
        run: |

          # LoopWorkspace patches
          # -applies any patches located in the LoopWorkspace/patches/ directory
          if $(ls ./patches/* &> /dev/null); then
          git apply ./patches/* --allow-empty -v --whitespace=fix
          fi

          # Submodule Loop patches:
          # Template for customizing submodule Loop (changes Loop app name to "CustomLoop")
          # Remove the "#" sign from the beginning of the line below to activate:
          #curl https://github.com/loopnlearn/Loop/commit/d206432b024279ef710df462b20bd464cd9682d4.patch | git apply --directory=Loop -v --whitespace=fix
          
          # Submodule LoopKit patches:
          # General template for customizing submodule LoopKit 
          # Copy url from a GitHub commit or pull request and insert below, and remove the "#" sign from the beginning of the line to activate:
          #curl url_to_github_commit.patch | git apply --directory=LoopKit -v --whitespace=fix
          
          # Submodule xxxxx patches:

          # Add patches for customization of additional submodules by following the templates above, 
          # and make sure to specify the submodule by setting "--directory=(submodule_name)".
          # Several patches may be added per submodule.
          # Adding comments (#) may be useful to easily tell the individual patches apart.
          
          
      # Patch Fastlane Match to not print tables
      - name: Patch Match Tables
        run: find /usr/local/lib/ruby/gems -name table_printer.rb | xargs sed -i "" "/puts(Terminal::Table.new(params))/d"
      
      # Build signed Loop IPA file
      - name: Fastlane Build & Archive
        run: fastlane build_loop
        env:
          TEAMID: ${{ secrets.TEAMID }}
          GH_PAT: ${{ secrets.GH_PAT }}
          FASTLANE_KEY_ID: ${{ secrets.FASTLANE_KEY_ID }}
          FASTLANE_ISSUER_ID: ${{ secrets.FASTLANE_ISSUER_ID }}
          FASTLANE_KEY: ${{ secrets.FASTLANE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      
      # Upload to TestFlight
      - name: Fastlane upload to TestFlight
        run: fastlane release
        env:
          TEAMID: ${{ secrets.TEAMID }}
          GH_PAT: ${{ secrets.GH_PAT }}
          FASTLANE_KEY_ID: ${{ secrets.FASTLANE_KEY_ID }}
          FASTLANE_ISSUER_ID: ${{ secrets.FASTLANE_ISSUER_ID }}
          FASTLANE_KEY: ${{ secrets.FASTLANE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      # Upload Build artifacts
      - name: Upload build log, IPA and Symbol artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            artifacts
            buildlog
